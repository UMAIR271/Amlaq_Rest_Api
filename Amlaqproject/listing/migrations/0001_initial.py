# Generated by Django 4.1 on 2022-09-19 11:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Amenities_Name', models.CharField(choices=[('Dishwasher', 'Dishwasher'), ('Fireplace', 'Fireplace'), ('Swimming pool', 'Swimming pool')], max_length=20)),
                ('Cration_Time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BasicQuestionair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('answer_type', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=50)),
                ('Descriptions', models.CharField(max_length=300)),
                ('Type', models.CharField(choices=[('Residential', 'Residential'), ('Commercial', 'Commercial')], max_length=11)),
                ('Purpose_Type', models.CharField(choices=[('Sell', 'Sell'), ('Rent', 'Rent')], max_length=13)),
                ('Bedrooms', models.IntegerField(choices=[(0, 'zero'), (1, 'one'), (2, 'two'), (3, 'three'), (4, 'three')], max_length=1)),
                ('Batrooms', models.IntegerField(choices=[(0, 'zero'), (1, 'one'), (2, 'two'), (3, 'three'), (4, 'three')], max_length=1)),
                ('Furnishing_type', models.CharField(choices=[('Residential', 'Residential'), ('Commercial', 'Commercial')], max_length=11)),
                ('Property_Tenure', models.CharField(choices=[('Unfurnised', 'Unfurnised'), ('semi-furnised', 'semi-furnised'), ('furnised', 'furnised')], max_length=13)),
                ('size', models.CharField(max_length=300)),
                ('Build_up_Area', models.CharField(max_length=300)),
                ('parking_number', models.CharField(max_length=300)),
                ('Property_Developer', models.CharField(max_length=300)),
                ('Build_year', models.CharField(max_length=300)),
                ('Building_Floor', models.CharField(max_length=300)),
                ('Floor_number', models.CharField(max_length=300)),
                ('Dewa_number', models.CharField(max_length=300)),
                ('Occupancy', models.CharField(choices=[('Owner occupied', 'Owner occupied'), ('Investment', 'Investment'), ('Vacant', 'Vacant'), ('Tenanted', 'Tenanted')], max_length=14)),
                ('Project_status', models.CharField(choices=[('Off plane', 'Off plane'), ('completed', 'completed')], max_length=9)),
                ('Renovation_type', models.CharField(choices=[('Fully upgraded', 'Fully upgraded'), ('Partially upgraded', 'Partially upgraded')], max_length=18)),
                ('Layout_type', models.CharField(max_length=300)),
                ('property_pricing', models.CharField(max_length=300)),
                ('Service_charge', models.CharField(max_length=300)),
                ('financial_status', models.CharField(choices=[('Mortgaged', 'Mortgaged'), ('Cash', 'Cash')], max_length=9)),
                ('Cheques', models.IntegerField(choices=[(0, 'zero'), (1, 'one'), (2, 'two'), (3, 'three'), (4, 'three')], max_length=1)),
                ('property_location', models.CharField(max_length=300)),
                ('street_Address', models.CharField(max_length=300)),
                ('project_name', models.CharField(max_length=300)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('list_verified', models.BooleanField(default=False, null=True)),
                ('latitude', models.FloatField(max_length=300, null=True)),
                ('longitude', models.FloatField(max_length=300, null=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserQuestionair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer1', models.CharField(max_length=100)),
                ('answer2', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.basicquestionair')),
            ],
        ),
        migrations.CreateModel(
            name='userprofile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_image', models.ImageField(upload_to='uploads/')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userlisting', to='listing.listing')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userprofiledata', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='property_verification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('propertyVerificationImage', models.ImageField(upload_to='uploads/')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propertyVerificationImage', to='listing.listing')),
            ],
        ),
        migrations.CreateModel(
            name='Property_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_type', models.CharField(choices=[('Apartment', 'Apartment'), ('Bungalow', 'Bungalow'), ('Compound', 'Compound'), ('Duplex', 'Duplex'), ('Full floor', 'Full floor'), ('Half floor', 'Half floor'), ('Land', 'Land'), ('Pent House', 'Pent House'), ('Town House', 'Town House'), ('Villa', 'Villa'), ('Whole Building', 'Whole Building'), ('Hotel apartments', 'Hotel apartments'), ('Bulk units', 'Bulk units')], max_length=16)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property', to='listing.listing')),
            ],
        ),
        migrations.CreateModel(
            name='ListingQuestionair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_answer', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.listing')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.basicquestionair')),
            ],
        ),
        migrations.CreateModel(
            name='Listing_Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images_Url', models.ImageField(upload_to='uploads/')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='list', to='listing.listing')),
            ],
        ),
        migrations.CreateModel(
            name='Listing_Amenities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cration_Time', models.DateTimeField(auto_now_add=True)),
                ('Amenities_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.amenities')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.listing')),
            ],
        ),
        migrations.CreateModel(
            name='interested',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('is_interested', models.BooleanField(default=False)),
                ('listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='listing.listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='floorPlane',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floorPlaneImage', models.ImageField(upload_to='uploads/')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floorplane', to='listing.listing')),
            ],
        ),
        migrations.CreateModel(
            name='FavouriteListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='listing.listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='compress_image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images_path', models.ImageField(upload_to='compress/', verbose_name='Photo')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compress', to='listing.listing')),
            ],
        ),
        migrations.CreateModel(
            name='AvailableSlots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_slots', models.TimeField()),
                ('slot_status', models.CharField(choices=[('available', 'Available'), ('booked', 'Booked')], max_length=50)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('null', 'Null'), ('approved', 'Approved'), ('declined', 'Decline')], max_length=50)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listing.listing')),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_user', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='amenities',
            name='listing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Amenities', to='listing.listing'),
        ),
    ]
